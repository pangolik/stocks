{
    "name": "glue-pyspark-poetry",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            "GLUE_VERSION": "4.0.0",
            "POETRY_VERSION": "1.4.0"
        }
    },
    "runArgs": [
        "--name",
        "${localWorkspaceFolderBasename}_${localEnv:USER}${localEnv:USERNAME}_stocks",
        "--privileged"
    ],
    "workspaceMount": "source=${localWorkspaceFolder},target=/home/glue_user/workspace,type=bind",
    "workspaceFolder": "/home/glue_user/workspace",
    "mounts": [
        "source=${localEnv:USERPROFILE}${localEnv:HOME}\\.aws,target=/home/glue_user/.aws,readonly,type=bind"
    ],
    "containerEnv": {
        "DISABLE_SSL": "true",
        "DATALAKE_FORMATS": "iceberg"
    },
    "forwardPorts": [
        4040,
        18080
    ],
    // ðŸ‘‡ Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-toolsai.jupyter",
                "ms-python.flake8",
                "ms-python.black-formatter",
                "ms-python.isort",
                "kevinrose.vsc-python-indent",
                "bungcip.better-toml",
                "ms-vscode.makefile-tools"
            ],
            "settings": {
                "python.envFile": "${containerWorkspaceFolder}/.env",
                "python.defaultInterpreterPath": "./.venv/bin/python",
                "python.linting.enabled": true,
                "python.linting.flake8Enabled": true,
                "black-formatter.importStrategy": "fromEnvironment",
                "isort.importStrategy": "fromEnvironment",
                "flake8.importStrategy": "fromEnvironment",
                "python.analysis.extraPaths": [
                    "/home/glue_user/aws-glue-libs/PyGlue.zip:/home/glue_user/spark/python/lib/py4j-0.10.9-src.zip:/home/glue_user/spark/python/"
                ],
                "python.formatting.provider": "none",
                "[python]": {
                    "editor.defaultFormatter": "ms-python.black-formatter",
                    "editor.formatOnSave": true,
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": true
                    }
                }
            }
        }
    }
}